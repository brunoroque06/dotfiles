#!/usr/bin/env pwsh -NoProfile

# @raycast.schemaVersion 1
# @raycast.title Type Password
# @raycast.mode compact
# @raycast.icon ðŸ”‘
# @raycast.argument1 { "placeholder": "code", "type": "dropdown", "data": [{ "title": "false", "value": "false" }, { "title": "true", "value": "true" }], "optional": true }

function TypeKeys {
    param (
        [string]$Text,
        [bool]$Esc = $false
    )
    $cmd = @('tell application "System Events"')
    if ($Esc) {
        $cmd += '  key code 53'
        $cmd += '  delay 0.5'
    }
    $cmd += "  keystroke `"$Text`""
    $cmd += '  key code 36'
    $cmd += 'end tell'
    $as = $cmd -join "`n"
    $sh = "osascript -e '$as'"
    Invoke-Expression $sh
}

$pw = Invoke-Expression ''
TypeKeys $pw $true

if ($args[0] -eq 'true') {
    Start-Sleep -Seconds 10
    $msg = Invoke-Expression 'sqlite3 ~/Library/Messages/chat.db ''select text from message where text like "passcode: %your ip-address: %country: %" order by date desc limit 1'''
    $match = [System.Text.RegularExpressions.Regex]::Match($msg, 'PASSCODE: (.*?) ')
    if (-not $match.Success) {
        throw 'Could not read code'
    }
    TypeKeys $match.Groups[1].Value
}
