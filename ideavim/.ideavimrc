" https://github.com/JetBrains/ideavim/wiki
set clipboard=unnamed
set hlsearch
set ignorecase
set incsearch
set number
set relativenumber
set scrolloff=5
set showcmd
set showmode
set smartcase

set ideajoin
set ideamarks
set idearefactormode=keep

set commentary
set highlightedyank
set NERDTree
set surround

sethandler <c-2> a:vim
sethandler <c-6> a:vim
sethandler <c-[> a:vim
sethandler <c-\> a:vim
sethandler <c-a> a:vim
sethandler <c-b> a:vim
sethandler <c-c> a:vim
sethandler <c-d> a:vim
sethandler <c-e> a:vim
sethandler <c-f> a:vim
sethandler <c-g> a:vim
sethandler <c-h> a:vim
sethandler <c-i> a:vim
sethandler <c-j> a:vim
sethandler <c-k> a:vim
sethandler <c-l> a:vim
sethandler <c-m> a:vim
sethandler <c-n> a:vim
sethandler <c-o> a:vim
sethandler <c-p> a:vim
sethandler <c-q> a:vim
sethandler <c-r> a:vim
sethandler <c-s-2> a:vim
sethandler <c-s-6> a:vim
sethandler <c-s> a:vim
sethandler <c-t> a:vim
sethandler <c-u> a:vim
sethandler <c-v> a:vim
sethandler <c-w> a:vim
sethandler <f1> a:ide

nmap == <Action>(SilentCodeCleanup)
nmap =i <Action>(OptimizeImports)
nmap [<space> k<Action>(EditorStartNewLine)j
nmap ]<space> <Action>(EditorStartNewLine)k
nmap [c <Action>(VcsShowPrevChangeMarker)
nmap ]c <Action>(VcsShowNextChangeMarker)
nmap [d <Action>(GotoPreviousError)
nmap ]d <Action>(GotoNextError)
nmap [f <Action>(MethodUp)
nmap ]f <Action>(MethodDown)
nmap [q <Action>(PreviousOccurence)
nmap ]q <Action>(NextOccurence)
nmap U <Action>($Redo)

nmap cd <Action>(RenameElement)

nmap g/ <Action>(FindInPath)
nmap gd <Action>(GotoDeclaration)
nmap gD <Action>(GotoTypeDeclaration)
nmap gh <Action>(ShowHoverInfo)
nmap gi <Action>(GotoImplementation)
nmap gr <Action>(ShowUsages)

nmap zd <Action>(RiderCollapseToDefinitions)

let mapleader="\<space>"

nmap <leader>b <Action>(ToggleLineBreakpoint)
nmap <leader>d <Action>(Debug)
nmap <leader>j <Action>(ToggleBookmark)
nmap <leader>r <Action>(Run)
nmap <leader>s <Action>(Stop)

nmap <c-w>gd <Action>(SplitVertically)<Action>(GotoDeclaration)
nmap <c-w>gD <Action>(SplitVertically)<Action>(GotoTypeDeclaration)
nmap <c-w>gi <Action>(SplitVertically)<Action>(GotoImplementation)
nmap <c-w>q <c-w>c
nmap <c-w>J <Action>(MoveTabDown)
nmap <c-w>L <Action>(MoveTabRight)
