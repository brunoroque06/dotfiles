#!/usr/bin/env bash

set -e

install() {
	brew update
	brew bundle install --file brew/Brewfile
	brew doctor
}

setup() {
	if [ ! -f /opt/homebrew/bin/brew ]; then
		/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
	fi

	install

	SH=/opt/homebrew/bin/bash
	grep -qxF $SH /etc/shells || printf '%s\n' "$SH" | sudo tee -a /etc/shells
	chsh -s $SH

	grep -q homebrew "$HOME/.bash_profile" || printf 'export PATH=/opt/homebrew/bin:%s\n' "$PATH" >"$HOME/.bash_profile"
}

paths=(
	elvish "$HOME"/.config/elvish
	git "$HOME"
	helix "$HOME"/.config/helix
	jetbrains "$HOME"
	neovim "$HOME"/.config/nvim
	nushell "$HOME/Library/Application Support/nushell"
	postgresql "$HOME"
	ripgrep "$HOME"/.config
	vivid "$HOME"/.config/vivid
	vscode "$HOME/Library/Application Support/Code/User"
	wezterm "$HOME"/.config/wezterm
)

link() {
	mkdir -p "$2"
	stow -S -v 1 -t "$2" "$1"
}

unlink() {
	stow -D -v 1 -t "$2" "$1"
}

for_config() {
	for ((i = 0; i < ${#paths[@]}; i += 2)); do
		$1 "${paths[i]}" "${paths[i + 1]}"
	done
}

case "$1" in
setup)
	setup
	;;
install)
	install
	;;
config)
	for_config link
	dotnet fsi tools/keybinds.fsx
	;;
unconfig)
	for_config unlink
	;;
*)
	printf 'Commands:\n'
	for o in $(grep -e '[a-z])$' dotfiles | tr -d ')'); do printf '  %s\n' "$o"; done
	;;
esac
