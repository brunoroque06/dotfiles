{
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[python]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 4
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[Log]": {
    "editor.wordWrap": "on"
  },
  "breadcrumbs.symbolPath": "last",
  "debug.allowBreakpointsEverywhere": true,
  "debug.console.fontSize": 13,
  "debug.inlineValues": true,
  "debug.internalConsoleOptions": "neverOpen",
  "debug.toolBarLocation": "docked",
  "editor.codeActionsOnSave": {
    "source.organizeImports": true
  },
  "editor.cursorBlinking": "solid",
  "editor.cursorSurroundingLines": 8,
  "editor.cursorWidth": 2,
  "editor.fontFamily": "JetBrains Mono",
  "editor.fontLigatures": true,
  "editor.fontSize": 13,
  "editor.formatOnSave": true,
  "editor.lineNumbers": "relative",
  "editor.minimap.enabled": false,
  "editor.suggestSelection": "first",
  "editor.tabSize": 2,
  "editor.wordWrap": "on",
  "errorLens.exclude": ["(.*): Unknown word."],
  "explorer.confirmDragAndDrop": false,
  "explorer.openEditors.sortOrder": "alphabetical",
  "explorer.openEditors.visible": 0,
  "files.autoSave": "afterDelay",
  "files.trimTrailingWhitespace": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "javascript.validate.enable": true,
  "markdown.preview.fontFamily": "SF Pro Text",
  "pgFormatter.commaBreak": true,
  "pgFormatter.keywordCase": "lowercase",
  "plantuml.render": "PlantUMLServer",
  "plantuml.server": "https://www.plantuml.com/plantuml",
  "python.formatting.provider": "black",
  "python.languageServer": "Pylance",
  "python.linting.mypyEnabled": true,
  "python.linting.pylintArgs": ["--disable=bad-continuation,missing-docstring"],
  "python.linting.pylintEnabled": true,
  "python.testing.pytestEnabled": true,
  "scm.alwaysShowRepositories": true,
  "terminal.integrated.fontSize": 13,
  "typescript.implementationsCodeLens.enabled": false,
  "typescript.referencesCodeLens.enabled": false,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "vim.highlightedyank.enable": true,
  "vim.hlsearch": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "`"],
      "commands": ["workbench.action.terminal.toggleTerminal"]
    },
    { "before": ["<leader>", "a"], "commands": ["editor.action.quickFix"] },
    { "before": ["<leader>", "b"], "commands": ["workbench.action.quickOpen"] },
    {
      "before": ["<leader>", "c"],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["<leader>", "d"],
      "commands": ["editor.action.peekDefinition"]
    },
    { "before": ["<leader>", "f"], "commands": ["workbench.action.quickOpen"] },
    {
      "before": ["<leader>", "g"],
      "commands": ["workbench.action.findInFiles"]
    },
    {
      "before": ["<leader>", "h"],
      "commands": ["editor.action.showDefinitionPreviewHover"]
    },
    {
      "before": ["<leader>", "i"],
      "commands": ["editor.action.goToImplementation"]
    },
    { "before": ["<leader>", "m"], "commands": [":marks"] },
    { "before": ["<leader>", "q"], "commands": [":quit"] },
    { "before": ["<leader>", "r"], "commands": ["editor.action.rename"] },
    {
      "before": ["<leader>", "s"],
      "commands": ["workbench.action.splitEditorDown"]
    },
    {
      "before": ["<leader>", "t"],
      "commands": ["workbench.action.gotoSymbol"]
    },
    { "before": ["<leader>", "u"], "commands": ["references-view.find"] },
    {
      "before": ["<leader>", "v"],
      "commands": ["workbench.action.splitEditor"]
    },
    {
      "before": ["<leader>", "z"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<c-w>", "J"],
      "commands": ["workbench.action.moveEditorToBelowGroup"]
    },
    {
      "before": ["<c-w>", "K"],
      "commands": ["workbench.action.moveEditorToAboveGroup"]
    },
    {
      "before": ["<c-w>", "H"],
      "commands": ["workbench.action.moveEditorToLeftGroup"]
    },
    {
      "before": ["<c-w>", "L"],
      "commands": ["workbench.action.moveEditorToRightGroup"]
    },
    {
      "before": ["backspace"],
      "commands": [
        "workbench.action.openPreviousEditorFromHistory",
        "workbench.action.acceptSelectedQuickOpenItem"
      ]
    },
    { "before": ["-"], "commands": ["breadcrumbs.focusAndSelect"] },
    {
      "before": ["[", "<space>"],
      "commands": ["editor.action.insertLineBefore"]
    },
    {
      "before": ["]", "<space>"],
      "commands": ["editor.action.insertLineAfter"]
    },
    { "before": ["[", "b"], "commands": ["workbench.action.previousEditor"] },
    { "before": ["]", "b"], "commands": ["workbench.action.nextEditor"] },
    { "before": ["[", "d"], "commands": ["editor.action.marker.previous"] },
    { "before": ["]", "d"], "commands": ["editor.action.marker.next"] },
    { "before": ["[", "e"], "after": ["d", "d", "k", "P"] },
    { "before": ["]", "e"], "after": ["d", "d", "p"] },
    {
      "before": ["[", "q"],
      "commands": ["search.action.focusPreviousSearchResult"],
      "when": "hasSearchResult"
    },
    {
      "before": ["]", "q"],
      "commands": ["search.action.focusNextSearchResult"],
      "when": "hasSearchResult"
    }
  ],
  "vim.surround": true,
  "vim.useSystemClipboard": true,
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "workbench.editor.enablePreview": false,
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.editor.limit.value": 10,
  "workbench.editor.showTabs": false,
  "workbench.tree.indent": 15,
  "workbench.tree.renderIndentGuides": "always"
}
